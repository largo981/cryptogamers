################
V.0.0.0
################
# Проект: Чат-бот для Telegram "Cryptogamers"

## Основные функции:
- Бот создает базу всех клиентов.
- Бот умеет начислять и списывать баланс в криптовалюте USDt (₮ Tether) с точностью до 8 знаков после запятой (0.00000000).
- Поддержка нескольких языков.
- Бот выдает валюту за время, проведенное в играх, и за действия в играх.
- Игры представлены в виде мини-приложений (web app) в Telegram.
- Мини-приложения — это HTML-страницы игр, которые хранятся на Github Pages.
- Реферальная система.

## Реализовано в V.0.0.0:
1. Создан основной файл бота `cryptogamers.py`, включающий подключение необходимых библиотек, работу с базами данных `user.db` и `game.db`, загрузку конфигурации из `bio.json`.
2. Настроена логика создания баз данных пользователей и игр, если они отсутствуют.
3. Реализованы начальные команды бота, такие как `/start` и обработка сообщений с кнопками "Случайная игра" и "Мой баланс".
4. Создан сервер на Flask в файле `webhook.py`, который принимает запросы от Telegram и обрабатывает взаимодействие с мини-приложениями.
5. Реализован эндпоинт для обновления баланса пользователя через запросы от мини-приложений.
6. **Добавлен файл `starter.py`** для одновременного запуска основного бота (`cryptogamers.py`), сервера веб-хуков (`webhook.py`), скрипта проверки баз данных (`dbchecker.py`) и проверки наличия файла `messages.json`. Включена поддержка отображения логов в консоли для всех процессов.
7. **Добавлен файл `dbchecker.py`** для проверки и создания баз данных `game.db` и `user.db`, если они отсутствуют.
8. **Добавлен файл `messages.json`** для хранения текстов сообщений бота и их переводов на различные языки.

## Архитектура проекта:
- **Файлы и базы данных**:
  - `cryptogamers.py`: Основной файл бота на Python.
  - `webhook.py`: Веб-сервер, реализующий обработку веб-хуков и взаимодействие с мини-приложениями.
  - `user.db`: База данных пользователей (SQLite).
    - `user_id`: Телеграм ID пользователя (уникальный идентификатор).
    - `user_name`: Имя пользователя из Telegram.
    - `user_referal`: ID пользователя, который привел текущего пользователя (если нет, то 0).
    - `referal_id`: Список ID пользователей, которых привел текущий пользователь (в текстовом формате, например JSON).
    - `user_balance`: Баланс пользователя (формат `0.00000000`).
    - `user_device`: Тип устройства (iOS/Android), если не определено, то пусто.
    - `user_install`: Поле для отметки, установлено приложение или нет (`yes/no`), по умолчанию `no`.
  - `game.db`: База данных игр (SQLite).
    - `game_id`: Уникальный идентификатор игры (целое число, автоинкремент).
    - `game_name`: Название игры.
    - `game_url`: Ссылка на игру, которая будет вставляться в `iframe`.
    - `game_category`: Категория игры.
    - `game_tag`: Тэги игры.
    - `game_description`: Описание игры.
    - `game_image_base64`: Картинка игры в формате Base64.
  - `bio.json`: Файл, в котором хранится актуальный токен бота, адрес веб-сервера и адрес страницы `game.html`.
  - `starter.py`: Скрипт для одновременного запуска `cryptogamers.py`, `webhook.py`, и `dbchecker.py`, с проверкой наличия файла `messages.json`.
  - `dbchecker.py`: Скрипт для проверки и создания баз данных `game.db` и `user.db`.
  - `messages.json`: Файл, в котором хранятся тексты сообщений бота и их переводы на различные языки.
  - Папка `/games/`: Содержит HTML-файлы игр, включая `game.html`, который загружает игру через `iframe` по ссылке из `game.db`.

- **Скрипт JavaScript**:
  - В `game.html` содержится скрипт, который отслеживает время, проведенное пользователем в игре.
  - За каждую секунду начисляется 0.00000001 ₮.
  - Начисления происходят каждые 5 секунд.

## Базовые команды бота:
- `/start`: Запускает бота.
- `/menu`: Открывает меню бота.

## Базовые экраны и функции бота:
- **Приветственное сообщение**:  Для всех пользователей которые запускают бота. (Не важно новый или старый)
  - Описание возможностей для игроков (заработок криптовалюты во время игр).
  - Кнопки: "Случайная игра" и "Мой баланс".

- **Случайная игра**:
  - Выбирается случайная игра из базы данных `game.db`.
  - Отображаются:
    - Название игры (жирным шрифтом).
    - Хэштеги: #категория, #тэги.
    - Описание игры.
    - Изображение игры (Base64).
  - Кнопки:
    - **Играть**: Открывает мини-приложение `game.html`.
    - **Другая игра**: Показывает другую случайную игру.

- **Игра через `game.html`**:
  - При загрузке страницы `game.html` передаются параметры `user_id` и `game_id` в URL.
  - В зависимости от `game_id`, скрипт на странице подставляет нужную ссылку из базы данных `game.db` в `iframe` для загрузки игры.

################
V.0.0.1
################

## Задачи для V.0.0.1:
1. Реализовать команду `/balance`, которая будет выводить текущий баланс пользователя.
2. Добавить возможность регистрации новых пользователей с уникальными Telegram ID.
3. Реализовать механизм реферальной системы, позволяющий пользователям приглашать друзей и получать бонусы.
4. Добавить обработку ошибок и улучшить логирование в боте и веб-сервере.
5. Создать простое админское меню для управления базой данных игр и пользователей.
6. Обновить и улучшить систему начисления бонусов за активность в играх, учитывая реферальные бонусы.