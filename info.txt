################
V.0.0.0
################
# Проект: Чат-бот для Telegram "Cryptogamers"

## Основные функции:
- Бот создает базу всех клиентов.
- Бот умеет начислять и списывать баланс в криптовалюте USDt (₮ Tether) с точностью до 8 знаков после запятой (0.00000000).
- Поддержка нескольких языков.
- Бот выдает валюту за время, проведенное в играх, и за действия в играх.
- Игры представлены в виде мини-приложений (web app) в Telegram.
- Мини-приложения — это HTML-страницы игр, которые хранятся на Github Pages.
- Реферальная система.

## Текущие задачи:
1. Разработать базовую архитектуру бота.
2. Разработать базу данных для пользователей, их балансов и их рефералов.
3. Создать базу данных игр (название игры, ID игры, ссылка на игру, категория, тэг, описание, картинка в Base64).

## Архитектура проекта:
- **Файлы и базы данных**:
  - `cryptogamers.py`: Основной файл бота на Python.
  - `webhook.py`: Веб-сервер, если потребуется.
  - `user.db`: База данных пользователей (SQLite).
  - `game.db`: База данных игр (SQLite).
  - 'bio.json' : Файл в котором хранится актуальный токен бота, адрес Веб-сервера (если он есть), адрес страницы game.html
  - Папка `/games/`: Содержит HTML-файлы игр, включая `game.html`, который загружает игру через `iframe` по ссылке из `game.db`.

- **Скрипт JavaScript**:
  - В `game.html` содержится скрипт, который отслеживает время, проведенное пользователем в игре.
  - За каждую секунду начисляется 0.00000001 ₮.
  - Начисления происходят каждые 5 секунд.

## Базовые команды бота:
- `/start`: Запускает бота.
- `/menu`: Открывает меню бота.

## Базовые экраны и функции бота:
- **Приветственное сообщение**: 
  - Описание возможностей для игроков (заработок криптовалюты во время игр).
  - Кнопки: "Случайная игра" и "Мой баланс".

- **Случайная игра**:
  - Выбирается случайная игра из базы данных `game.db`.
  - Отображаются:
    - Название игры (жирным шрифтом).
    - Хэштеги: #категория, #тэги.
    - Описание игры.
    - Изображение игры (Base64).
  - Кнопки:
    - **Играть**: Открывает мини-приложение `game.html`.
    - **Другая игра**: Показывает другую случайную игру.

- **Игра через `game.html`**:
  - При загрузке страницы `game.html` передаются параметры `user_id` и `game_id` в URL.
  - В зависимости от `game_id`, скрипт на странице подставляет нужную ссылку из базы данных `game.db` в `iframe` для загрузки игры.
